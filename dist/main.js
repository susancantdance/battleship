(()=>{"use strict";var n={208:(n,r,e)=>{e.d(r,{A:()=>s});var t=e(354),o=e.n(t),i=e(314),a=e.n(i)()(o());a.push([n.id,'body {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: pink;\n}\n\n.container {\n  display: grid;\n  grid-template-columns: 5% 45% 5% 45%;\n  grid-template-rows: 15% 70% 15%;\n  width: 80%;\n}\n\n.X-axis-letters.two {\n  grid-row: 1/2;\n  grid-column: 4/5;\n}\n\n.X-axis-letters {\n  grid-row: 1/ 2;\n  grid-column: 2 / 3;\n  display: flex;\n  /* border-style: solid; */\n  justify-content: flex-start;\n  align-items: flex-end;\n  width: 270px;\n}\n\n.letter {\n  width: 27px;\n  /* background-color: grey; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.Y-axis-numbers.two {\n  grid-row: 2/3;\n  grid-column: 3 / 4;\n}\n.Y-axis-numbers {\n  /* background-color: bisque; */\n  grid-row: 2/3;\n  grid-column: 1/2;\n  display: flex;\n  flex-direction: column;\n  /* align-items: center;*/\n  justify-content: center;\n  justify-items: center;\n  align-items: center;\n  height: 270px;\n}\n\n.number {\n  /* background-color: pink; */\n  padding: 0px;\n  margin: 0px;\n  height: 27px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.grid.opp {\n  grid-row: 2 / 3;\n  grid-column: 4 / 5;\n  background-color: white;\n}\n\n.grid {\n  /* border-style: solid;\n  border-color: black; */\n  background-color: white;\n  width: 270px;\n  height: 270px;\n  margin: 0px 0px 0px 0px;\n  padding: 0px 0px 0px 0px;\n  display: flex;\n  /* justify-content: center; */\n  align-items: center;\n  gap: 0;\n  flex-wrap: wrap;\n  grid-row: 2/3;\n  grid-column: 2 / 3;\n}\n\n.label.opp {\n  grid-column: 2 /3;\n  grid-row: 4 /5;\n}\n\n.label.you {\n  grid-column: 4 /5;\n  grid-row: 4 /5;\n}\n\ndialog {\n  width: 600px;\n  text-align: center;\n}\n\n/* .empty .hit .ship .miss {\n  background-color: white;\n  border-style: dotted;\n  border-width: 1px;\n  border-color: black;\n  width: 25px;\n  height: 25px;\n  padding: 0px;\n  margin: 0px;\n} */\n\n/* .hit {\n  background-image: url("./images/kittysvg.svg");\n}\n\n/* .miss {\n} */\n\n/* .ship {\n  background-image: url("./images/kittysvg.svg");\n} */\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,oCAAoC;EACpC,+BAA+B;EAC/B,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,kBAAkB;EAClB,aAAa;EACb,yBAAyB;EACzB,2BAA2B;EAC3B,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,WAAW;EACX,4BAA4B;EAC5B,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;AACzB;AACA;EACE,aAAa;EACb,kBAAkB;AACpB;AACA;EACE,8BAA8B;EAC9B,aAAa;EACb,gBAAgB;EAChB,aAAa;EACb,sBAAsB;EACtB,wBAAwB;EACxB,uBAAuB;EACvB,qBAAqB;EACrB,mBAAmB;EACnB,aAAa;AACf;;AAEA;EACE,4BAA4B;EAC5B,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,uBAAuB;AACzB;;AAEA;EACE;wBACsB;EACtB,uBAAuB;EACvB,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,wBAAwB;EACxB,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;EACnB,MAAM;EACN,eAAe;EACf,aAAa;EACb,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,kBAAkB;AACpB;;AAEA;;;;;;;;;GASG;;AAEH;;;;;GAKG;;AAEH;;GAEG",sourcesContent:['body {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: pink;\n}\n\n.container {\n  display: grid;\n  grid-template-columns: 5% 45% 5% 45%;\n  grid-template-rows: 15% 70% 15%;\n  width: 80%;\n}\n\n.X-axis-letters.two {\n  grid-row: 1/2;\n  grid-column: 4/5;\n}\n\n.X-axis-letters {\n  grid-row: 1/ 2;\n  grid-column: 2 / 3;\n  display: flex;\n  /* border-style: solid; */\n  justify-content: flex-start;\n  align-items: flex-end;\n  width: 270px;\n}\n\n.letter {\n  width: 27px;\n  /* background-color: grey; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.Y-axis-numbers.two {\n  grid-row: 2/3;\n  grid-column: 3 / 4;\n}\n.Y-axis-numbers {\n  /* background-color: bisque; */\n  grid-row: 2/3;\n  grid-column: 1/2;\n  display: flex;\n  flex-direction: column;\n  /* align-items: center;*/\n  justify-content: center;\n  justify-items: center;\n  align-items: center;\n  height: 270px;\n}\n\n.number {\n  /* background-color: pink; */\n  padding: 0px;\n  margin: 0px;\n  height: 27px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.grid.opp {\n  grid-row: 2 / 3;\n  grid-column: 4 / 5;\n  background-color: white;\n}\n\n.grid {\n  /* border-style: solid;\n  border-color: black; */\n  background-color: white;\n  width: 270px;\n  height: 270px;\n  margin: 0px 0px 0px 0px;\n  padding: 0px 0px 0px 0px;\n  display: flex;\n  /* justify-content: center; */\n  align-items: center;\n  gap: 0;\n  flex-wrap: wrap;\n  grid-row: 2/3;\n  grid-column: 2 / 3;\n}\n\n.label.opp {\n  grid-column: 2 /3;\n  grid-row: 4 /5;\n}\n\n.label.you {\n  grid-column: 4 /5;\n  grid-row: 4 /5;\n}\n\ndialog {\n  width: 600px;\n  text-align: center;\n}\n\n/* .empty .hit .ship .miss {\n  background-color: white;\n  border-style: dotted;\n  border-width: 1px;\n  border-color: black;\n  width: 25px;\n  height: 25px;\n  padding: 0px;\n  margin: 0px;\n} */\n\n/* .hit {\n  background-image: url("./images/kittysvg.svg");\n}\n\n/* .miss {\n} */\n\n/* .ship {\n  background-image: url("./images/kittysvg.svg");\n} */\n'],sourceRoot:""}]);const s=a},314:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(a[d]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);t&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),r.push(l))}},r}},354:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */");return[r].concat([i]).join("\n")}return[r].join("\n")}},72:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var i={},a=[],s=0;s<n.length;s++){var d=n[s],A=t.base?d[0]+t.base:d[0],l=i[A]||0,c="".concat(A," ").concat(l);i[A]=l+1;var p=e(c),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var g=o(u,t);t.byIndex=s,r.splice(s,0,{identifier:c,updater:g,references:1})}a.push(c)}return a}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=e(i[a]);r[s].references--}for(var d=t(n,o),A=0;A<i.length;A++){var l=e(i[A]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}i=d}}},659:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},540:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},56:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},113:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var i=r[t]={id:t,exports:{}};return n[t](i,i.exports,e),i.exports}function t(n){let r=n,e=[],t=0;return{length:r,hit:()=>{t++},isSunk:()=>r==t,getHits:()=>t,addCoords:n=>{e.push(n)},getCoords:()=>e}}function o(n){let r=function(){let n=new Map,r="ABCDEFGHIJ".split("");for(let e=0;e<10;e++)for(let t=0;t<10;t++)n.set(JSON.stringify([e,r[t]]),"empty");return{board:n,receiveAttack:r=>{let e=n.get(r);if("empty"==e?n.set(r,"miss"):Array.isArray(e)&&"ship"==e[0]&&(n.set(r,["hit",e[1]]),e[1].hit()),Array.isArray(e)&&e[1].isSunk()){let r=e[1].getCoords();for(let t=0;t<e[1].length;t++)console.log(`coords i is ${r[t]}`),n.set(r[t],["sunk",e[1]])}},allSunk:()=>{let r=Array.from(n.values()).filter((n=>Array.isArray(n))),e=!0;for(let n=0;n<r.length;n++)"ship"==r[n][0]&&(e=!1);return e},addShips:()=>{let r="ABCDEFGHIJ";for(let e=0;e<6;e++){let e=Math.floor(100*Math.random())%10,o=Math.floor(100*Math.random())%10,i=r.charAt(o),a=1+Math.floor(100*Math.random())%4,s=Math.round(Math.random());if(1==a){let r=t(1),o=`[${e},"${i}"]`;n.set(o,["ship",r]),r.addCoords(o)}else{let d=t(a);1==s&&e>10-a?e=10-a:0==s&&o>10-a&&(o=10-a,i=r.charAt(o)),console.log(`[${e},"${i}"] dir: ${s} length: ${a}`);for(let t=0;t<a;t++){let t=`[${e},"${i}"]`;n.set(t,["ship",d]),d.addCoords(t),0==s?i=r.charAt(++o):++e}}}},allEmpty:()=>{let r=!0,e=Array.from(n.values());for(let n=0;n<e.length;n++)"empty"!=e[n]&&(r=!1);return r},forTesting:()=>{let r=t(2),e=t(1);n.set('[0,"A"]',["ship",e]),e.addCoords('[0,"A"]'),n.set('[8,"G"]',["ship",r]),r.addCoords('[8,"G"]'),n.set('[9,"G"]',["ship",r]),r.addCoords('[9,"G"]'),n.set('[4,"J"]',"miss"),n.set('[5,"D"]',"miss")}}}();return r.addShips(),{gb:r}}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.nc=void 0;var i=e(72),a=e.n(i),s=e(825),d=e.n(s),A=e(659),l=e.n(A),c=e(56),p=e.n(c),u=e(540),g=e.n(u),m=e(113),h=e.n(m),b=e(208),y={};y.styleTagTransform=h(),y.setAttributes=p(),y.insert=l().bind(null,"head"),y.domAPI=d(),y.insertStyleElement=g(),a()(b.A,y),b.A&&b.A.locals&&b.A.locals;const x=document.querySelector(".grid.opp"),f=document.querySelector(".grid.you"),B=document.querySelector("dialog");let C=o(),E=o(),w=Array.from(C.gb.board.values()),v=Array.from(E.gb.board.values());console.log(Array.from(C.gb.board.entries())),console.log(Array.from(E.gb.board.entries()));let k=Array.from(C.gb.board.keys());function j(){let n=!1;do{let r=Math.floor(100*Math.random());console.log(`pick is ${r}`);let e=Array.from(C.gb.board.entries())[r];console.log(`entry is ${e}`);let t=e[0],o=e[1];(Array.isArray(o)&&"ship"==o[0]||"empty"==o)&&(C.gb.receiveAttack(t),n=!0)}while(!n)}function M(n){for(let r=0;r<100;r++){const e=document.createElement("div");Array.isArray(n[r])||"empty"!=n[r]?Array.isArray(n[r])&&"ship"==n[r][0]?e.setAttribute("style","background-color: orange;\n                    border-style: solid;\n                    border-width: 1px;\n                    border-color: orange;\n                    width: 25px;\n                    height: 25px;\n                    padding: 0px;\n                    margin: 0px;"):Array.isArray(n[r])&&"hit"==n[r][0]?e.setAttribute("style","background-color: red;\n                    border-style: solid;\n                    border-width: 1px;\n                    border-color: orange;\n                    width: 25px;\n                    height: 25px;\n                    padding: 0px;\n                    margin: 0px;"):Array.isArray(n[r])||"miss"!=n[r]?Array.isArray(n[r])&&"sunk"==n[r][0]&&e.setAttribute("style","background-color: #ec832c;\n        background-img: url('./kittysvg.svg');\n                      border-style: solid;\n                      border-width: 1px;\n                      border-color: red;\n                      width: 25px;\n                      height: 25px;\n                      padding: 0px;\n                      margin: 0px;"):e.setAttribute("style","background-color: gray;\n                      border-style: dotted;\n                      border-width: 1px;\n                      border-color: black;\n                      width: 25px;\n                      height: 25px;\n                      padding: 0px;\n                      margin: 0px;"):e.setAttribute("style","background-color: white;\n                      border-style: dotted;\n                      border-width: 1px;\n                border-color: black;\n                        width: 25px;\n                        height: 25px;\n                        padding: 0px;\n                        margin: 0px;"),f.appendChild(e)}}M(w),function n(r){for(let e=0;e<100;e++){const t=document.createElement("div");Array.isArray(r[e])||"empty"!=r[e]?Array.isArray(r[e])&&"ship"==r[e][0]?t.setAttribute("style","background-color: white;\n                            border-style: dotted;\n                            border-width: 1px;\n                      border-color: black;\n                              width: 25px;\n                              height: 25px;\n                              padding: 0px;\n                              margin: 0px;"):Array.isArray(r[e])&&"hit"==r[e][0]?t.setAttribute("style","background-image: url('./paw.svg');\n                      border-style: solid;\n                      border-width: 1px;\n                      border-color: orange;\n                      width: 25px;\n                      height: 25px;\n                      padding: 0px;\n                      margin: 0px;"):Array.isArray(r[e])||"miss"!=r[e]?Array.isArray(r[e])&&"sunk"==r[e][0]&&t.setAttribute("style","background-color: #ec832c;\n        background-image: url('./kittysvg.svg');\n                        border-style: solid;\n                        border-width: 1px;\n                        border-color: orange;\n                        width: 25px;\n                        height: 25px;\n                        padding: 0px;\n                        margin: 0px;"):t.setAttribute("style","background-color: gray;\n                        border-style: dotted;\n                        border-width: 1px;\n                        border-color: black;\n                        width: 25px;\n                        height: 25px;\n                        padding: 0px;\n                        margin: 0px;"):t.setAttribute("style","background-color: white;\n                        border-style: dotted;\n                        border-width: 1px;\n                  border-color: black;\n                          width: 25px;\n                          height: 25px;\n                          padding: 0px;\n                          margin: 0px;"),t.addEventListener("click",(()=>{E.gb.receiveAttack(k[e]),console.log(E.gb.board),x.textContent="",n(Array.from(E.gb.board.values())),j(),x.textContent="",n(Array.from(E.gb.board.values())),B.showModal(),setTimeout((()=>{B.close()}),750),f.textContent="",M(Array.from(C.gb.board.values()))})),x.appendChild(t)}}(v)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU1lLFdBRXhDa0QsSUFDQVQsRUFBUWlCLFlBQWMsR0FDdEJGLEVBQWdCL0QsTUFBTU0sS0FBSzhDLEVBQUk3RCxHQUFHQyxNQUFNZSxXQUN4QzJDLEVBQU9nQixZQUNQQyxZQUFXLEtBQ1RqQixFQUFPa0IsT0FBTyxHQUNiLEtBQ0huQixFQUFRZ0IsWUFBYyxHQUN0QkosRUFBaUI3RCxNQUFNTSxLQUFLNkMsRUFBSTVELEdBQUdDLE1BQU1lLFVBQVUsSUFHckR5QyxFQUFRNUYsWUFBWTBHLEVBQ3RCLENBQ0YsQ0FHQUMsQ0FBZ0JULEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvZmFjdG9yaWVzLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgYm9keSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBwaW5rO1xufVxuXG4uY29udGFpbmVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA1JSA0NSUgNSUgNDUlO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IDE1JSA3MCUgMTUlO1xuICB3aWR0aDogODAlO1xufVxuXG4uWC1heGlzLWxldHRlcnMudHdvIHtcbiAgZ3JpZC1yb3c6IDEvMjtcbiAgZ3JpZC1jb2x1bW46IDQvNTtcbn1cblxuLlgtYXhpcy1sZXR0ZXJzIHtcbiAgZ3JpZC1yb3c6IDEvIDI7XG4gIGdyaWQtY29sdW1uOiAyIC8gMztcbiAgZGlzcGxheTogZmxleDtcbiAgLyogYm9yZGVyLXN0eWxlOiBzb2xpZDsgKi9cbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIHdpZHRoOiAyNzBweDtcbn1cblxuLmxldHRlciB7XG4gIHdpZHRoOiAyN3B4O1xuICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiBncmV5OyAqL1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi5ZLWF4aXMtbnVtYmVycy50d28ge1xuICBncmlkLXJvdzogMi8zO1xuICBncmlkLWNvbHVtbjogMyAvIDQ7XG59XG4uWS1heGlzLW51bWJlcnMge1xuICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiBiaXNxdWU7ICovXG4gIGdyaWQtcm93OiAyLzM7XG4gIGdyaWQtY29sdW1uOiAxLzI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC8qIGFsaWduLWl0ZW1zOiBjZW50ZXI7Ki9cbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiAyNzBweDtcbn1cblxuLm51bWJlciB7XG4gIC8qIGJhY2tncm91bmQtY29sb3I6IHBpbms7ICovXG4gIHBhZGRpbmc6IDBweDtcbiAgbWFyZ2luOiAwcHg7XG4gIGhlaWdodDogMjdweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5ncmlkLm9wcCB7XG4gIGdyaWQtcm93OiAyIC8gMztcbiAgZ3JpZC1jb2x1bW46IDQgLyA1O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuLmdyaWQge1xuICAvKiBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItY29sb3I6IGJsYWNrOyAqL1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgd2lkdGg6IDI3MHB4O1xuICBoZWlnaHQ6IDI3MHB4O1xuICBtYXJnaW46IDBweCAwcHggMHB4IDBweDtcbiAgcGFkZGluZzogMHB4IDBweCAwcHggMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAvKiBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgKi9cbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiAwO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGdyaWQtcm93OiAyLzM7XG4gIGdyaWQtY29sdW1uOiAyIC8gMztcbn1cblxuLmxhYmVsLm9wcCB7XG4gIGdyaWQtY29sdW1uOiAyIC8zO1xuICBncmlkLXJvdzogNCAvNTtcbn1cblxuLmxhYmVsLnlvdSB7XG4gIGdyaWQtY29sdW1uOiA0IC81O1xuICBncmlkLXJvdzogNCAvNTtcbn1cblxuZGlhbG9nIHtcbiAgd2lkdGg6IDYwMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi8qIC5lbXB0eSAuaGl0IC5zaGlwIC5taXNzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJvcmRlci1zdHlsZTogZG90dGVkO1xuICBib3JkZXItd2lkdGg6IDFweDtcbiAgYm9yZGVyLWNvbG9yOiBibGFjaztcbiAgd2lkdGg6IDI1cHg7XG4gIGhlaWdodDogMjVweDtcbiAgcGFkZGluZzogMHB4O1xuICBtYXJnaW46IDBweDtcbn0gKi9cblxuLyogLmhpdCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vaW1hZ2VzL2tpdHR5c3ZnLnN2Z1wiKTtcbn1cblxuLyogLm1pc3Mge1xufSAqL1xuXG4vKiAuc2hpcCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vaW1hZ2VzL2tpdHR5c3ZnLnN2Z1wiKTtcbn0gKi9cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isb0NBQW9DO0VBQ3BDLCtCQUErQjtFQUMvQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IseUJBQXlCO0VBQ3pCLDJCQUEyQjtFQUMzQixxQkFBcUI7RUFDckIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsV0FBVztFQUNYLDRCQUE0QjtFQUM1QixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQix1QkFBdUI7QUFDekI7QUFDQTtFQUNFLGFBQWE7RUFDYixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLDhCQUE4QjtFQUM5QixhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsd0JBQXdCO0VBQ3hCLHVCQUF1QjtFQUN2QixxQkFBcUI7RUFDckIsbUJBQW1CO0VBQ25CLGFBQWE7QUFDZjs7QUFFQTtFQUNFLDRCQUE0QjtFQUM1QixZQUFZO0VBQ1osV0FBVztFQUNYLFlBQVk7RUFDWixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFO3dCQUNzQjtFQUN0Qix1QkFBdUI7RUFDdkIsWUFBWTtFQUNaLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsd0JBQXdCO0VBQ3hCLGFBQWE7RUFDYiw2QkFBNkI7RUFDN0IsbUJBQW1CO0VBQ25CLE1BQU07RUFDTixlQUFlO0VBQ2YsYUFBYTtFQUNiLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osa0JBQWtCO0FBQ3BCOztBQUVBOzs7Ozs7Ozs7R0FTRzs7QUFFSDs7Ozs7R0FLRzs7QUFFSDs7R0FFR1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCJib2R5IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcGluaztcXG59XFxuXFxuLmNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA1JSA0NSUgNSUgNDUlO1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxNSUgNzAlIDE1JTtcXG4gIHdpZHRoOiA4MCU7XFxufVxcblxcbi5YLWF4aXMtbGV0dGVycy50d28ge1xcbiAgZ3JpZC1yb3c6IDEvMjtcXG4gIGdyaWQtY29sdW1uOiA0LzU7XFxufVxcblxcbi5YLWF4aXMtbGV0dGVycyB7XFxuICBncmlkLXJvdzogMS8gMjtcXG4gIGdyaWQtY29sdW1uOiAyIC8gMztcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICAvKiBib3JkZXItc3R5bGU6IHNvbGlkOyAqL1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xcbiAgd2lkdGg6IDI3MHB4O1xcbn1cXG5cXG4ubGV0dGVyIHtcXG4gIHdpZHRoOiAyN3B4O1xcbiAgLyogYmFja2dyb3VuZC1jb2xvcjogZ3JleTsgKi9cXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbn1cXG4uWS1heGlzLW51bWJlcnMudHdvIHtcXG4gIGdyaWQtcm93OiAyLzM7XFxuICBncmlkLWNvbHVtbjogMyAvIDQ7XFxufVxcbi5ZLWF4aXMtbnVtYmVycyB7XFxuICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiBiaXNxdWU7ICovXFxuICBncmlkLXJvdzogMi8zO1xcbiAgZ3JpZC1jb2x1bW46IDEvMjtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgLyogYWxpZ24taXRlbXM6IGNlbnRlcjsqL1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgaGVpZ2h0OiAyNzBweDtcXG59XFxuXFxuLm51bWJlciB7XFxuICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiBwaW5rOyAqL1xcbiAgcGFkZGluZzogMHB4O1xcbiAgbWFyZ2luOiAwcHg7XFxuICBoZWlnaHQ6IDI3cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLmdyaWQub3BwIHtcXG4gIGdyaWQtcm93OiAyIC8gMztcXG4gIGdyaWQtY29sdW1uOiA0IC8gNTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbn1cXG5cXG4uZ3JpZCB7XFxuICAvKiBib3JkZXItc3R5bGU6IHNvbGlkO1xcbiAgYm9yZGVyLWNvbG9yOiBibGFjazsgKi9cXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgd2lkdGg6IDI3MHB4O1xcbiAgaGVpZ2h0OiAyNzBweDtcXG4gIG1hcmdpbjogMHB4IDBweCAwcHggMHB4O1xcbiAgcGFkZGluZzogMHB4IDBweCAwcHggMHB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIC8qIGp1c3RpZnktY29udGVudDogY2VudGVyOyAqL1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGdhcDogMDtcXG4gIGZsZXgtd3JhcDogd3JhcDtcXG4gIGdyaWQtcm93OiAyLzM7XFxuICBncmlkLWNvbHVtbjogMiAvIDM7XFxufVxcblxcbi5sYWJlbC5vcHAge1xcbiAgZ3JpZC1jb2x1bW46IDIgLzM7XFxuICBncmlkLXJvdzogNCAvNTtcXG59XFxuXFxuLmxhYmVsLnlvdSB7XFxuICBncmlkLWNvbHVtbjogNCAvNTtcXG4gIGdyaWQtcm93OiA0IC81O1xcbn1cXG5cXG5kaWFsb2cge1xcbiAgd2lkdGg6IDYwMHB4O1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4vKiAuZW1wdHkgLmhpdCAuc2hpcCAubWlzcyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGJvcmRlci1zdHlsZTogZG90dGVkO1xcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XFxuICBib3JkZXItY29sb3I6IGJsYWNrO1xcbiAgd2lkdGg6IDI1cHg7XFxuICBoZWlnaHQ6IDI1cHg7XFxuICBwYWRkaW5nOiAwcHg7XFxuICBtYXJnaW46IDBweDtcXG59ICovXFxuXFxuLyogLmhpdCB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXFxcIi4vaW1hZ2VzL2tpdHR5c3ZnLnN2Z1xcXCIpO1xcbn1cXG5cXG4vKiAubWlzcyB7XFxufSAqL1xcblxcbi8qIC5zaGlwIHtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcXFwiLi9pbWFnZXMva2l0dHlzdmcuc3ZnXFxcIik7XFxufSAqL1xcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIFNoaXAobGVuKSB7XG4gIGxldCBsZW5ndGggPSBsZW47XG4gIGxldCBjb29yZHMgPSBbXTtcbiAgbGV0IHRpbWVzSGl0ID0gMDtcblxuICBjb25zdCBhZGRDb29yZHMgPSAoc3RyKSA9PiB7XG4gICAgY29vcmRzLnB1c2goc3RyKTtcbiAgfTtcblxuICBjb25zdCBnZXRDb29yZHMgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGNvb3JkcztcbiAgfTtcbiAgY29uc3QgaGl0ID0gKCkgPT4ge1xuICAgIHRpbWVzSGl0Kys7XG4gIH07XG4gIGNvbnN0IGdldEhpdHMgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHRpbWVzSGl0O1xuICB9O1xuICBjb25zdCBpc1N1bmsgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGxlbmd0aCA9PSB0aW1lc0hpdDtcbiAgfTtcblxuICByZXR1cm4geyBsZW5ndGgsIGhpdCwgaXNTdW5rLCBnZXRIaXRzLCBhZGRDb29yZHMsIGdldENvb3JkcyB9O1xufVxuXG5mdW5jdGlvbiBHYW1lYm9hcmQoKSB7XG4gIGxldCBib2FyZCA9IG5ldyBNYXAoKTtcbiAgbGV0IGxldHRlcnMgPSBcIkFCQ0RFRkdISUpcIi5zcGxpdChcIlwiKTtcblxuICAvL3BvcHVsYXRlIGJvYXJkXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xuICAgIGZvciAobGV0IGsgPSAwOyBrIDwgMTA7IGsrKykge1xuICAgICAgYm9hcmQuc2V0KEpTT04uc3RyaW5naWZ5KFtpLCBsZXR0ZXJzW2tdXSksIFwiZW1wdHlcIik7XG4gICAgfVxuICB9XG5cbiAgLy9tYWtlIGEgc2hpcCwgYXNzaWduIGNvb3JkaW5hdGVzIGZvciBjb21wdXRlclxuICBjb25zdCBhZGRTaGlwcyA9ICgpID0+IHtcbiAgICBsZXQgbGV0dGVycyA9IFwiQUJDREVGR0hJSlwiO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA2OyBpKyspIHtcbiAgICAgIGxldCBudW0gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDApICUgMTA7XG4gICAgICBsZXQgaW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDApICUgMTA7XG4gICAgICBsZXQgbGV0dCA9IGxldHRlcnMuY2hhckF0KGluZGV4KTtcblxuICAgICAgbGV0IHNpemUgPSAxICsgKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMCkgJSA0KTtcbiAgICAgIGxldCBkaXJlY3Rpb24gPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkpO1xuICAgICAgLy8wIGlzIGFjcm9zcywgMSBpcyBkb3duXG5cbiAgICAgIGlmIChzaXplID09IDEpIHtcbiAgICAgICAgbGV0IHNocCA9IFNoaXAoMSk7XG4gICAgICAgIGxldCBjb29yZCA9IGBbJHtudW19LFwiJHtsZXR0fVwiXWA7XG4gICAgICAgIGJvYXJkLnNldChjb29yZCwgW1wic2hpcFwiLCBzaHBdKTtcbiAgICAgICAgc2hwLmFkZENvb3Jkcyhjb29yZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgc2hwID0gU2hpcChzaXplKTtcbiAgICAgICAgLy9kb3duXG4gICAgICAgIGlmIChkaXJlY3Rpb24gPT0gMSAmJiBudW0gPiAxMCAtIHNpemUpIHtcbiAgICAgICAgICBudW0gPSAxMCAtIHNpemU7XG4gICAgICAgIH1cbiAgICAgICAgLy9hY3Jvc3NcbiAgICAgICAgZWxzZSBpZiAoZGlyZWN0aW9uID09IDAgJiYgaW5kZXggPiAxMCAtIHNpemUpIHtcbiAgICAgICAgICBpbmRleCA9IDEwIC0gc2l6ZTtcbiAgICAgICAgICBsZXR0ID0gbGV0dGVycy5jaGFyQXQoaW5kZXgpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gY29uc29sZS5sb2coYERJUkVDVElPTmApO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhkaXJlY3Rpb24pO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIk5VTVwiKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2cobnVtKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCJMRVRUXCIpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhsZXR0KTtcbiAgICAgICAgY29uc29sZS5sb2coYFske251bX0sXCIke2xldHR9XCJdIGRpcjogJHtkaXJlY3Rpb259IGxlbmd0aDogJHtzaXplfWApO1xuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHNpemU7IGorKykge1xuICAgICAgICAgIGxldCBjb29yZCA9IGBbJHtudW19LFwiJHtsZXR0fVwiXWA7XG4gICAgICAgICAgYm9hcmQuc2V0KGNvb3JkLCBbXCJzaGlwXCIsIHNocF0pO1xuICAgICAgICAgIHNocC5hZGRDb29yZHMoY29vcmQpO1xuICAgICAgICAgIGlmIChkaXJlY3Rpb24gPT0gMCkge1xuICAgICAgICAgICAgbGV0dCA9IGxldHRlcnMuY2hhckF0KCsraW5kZXgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICArK251bTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBib2FyZC5zZXQoJ1sxLFwiQlwiXScsIFtcInNoaXBcIiwgc2hpcDFdKTtcbiAgICAvLyBib2FyZC5zZXQoJ1syLFwiQ1wiXScsIFtcInNoaXBcIiwgc2hpcDJdKTtcbiAgICAvLyBib2FyZC5zZXQoJ1szLFwiQ1wiXScsIFtcInNoaXBcIiwgc2hpcDJdKTtcbiAgICAvLyBib2FyZC5zZXQoJ1szLFwiR1wiXScsIFtcInNoaXBcIiwgc2hpcDNdKTtcbiAgICAvLyBib2FyZC5zZXQoJ1szLFwiSFwiXScsIFtcInNoaXBcIiwgc2hpcDNdKTtcbiAgICAvLyBib2FyZC5zZXQoJ1szLFwiSVwiXScsIFtcInNoaXBcIiwgc2hpcDNdKTtcbiAgfTtcblxuICBjb25zdCBmb3JUZXN0aW5nID0gKCkgPT4ge1xuICAgIGxldCBzaGlwMSA9IFNoaXAoMik7XG4gICAgbGV0IHNoaXBvbyA9IFNoaXAoMSk7XG5cbiAgICBib2FyZC5zZXQoJ1swLFwiQVwiXScsIFtcInNoaXBcIiwgc2hpcG9vXSk7XG4gICAgc2hpcG9vLmFkZENvb3JkcygnWzAsXCJBXCJdJyk7XG4gICAgYm9hcmQuc2V0KCdbOCxcIkdcIl0nLCBbXCJzaGlwXCIsIHNoaXAxXSk7XG4gICAgc2hpcDEuYWRkQ29vcmRzKCdbOCxcIkdcIl0nKTtcbiAgICBib2FyZC5zZXQoJ1s5LFwiR1wiXScsIFtcInNoaXBcIiwgc2hpcDFdKTtcbiAgICBzaGlwMS5hZGRDb29yZHMoJ1s5LFwiR1wiXScpO1xuICAgIGJvYXJkLnNldCgnWzQsXCJKXCJdJywgXCJtaXNzXCIpO1xuICAgIGJvYXJkLnNldCgnWzUsXCJEXCJdJywgXCJtaXNzXCIpO1xuICB9O1xuXG4gIGNvbnN0IHJlY2VpdmVBdHRhY2sgPSAoY29vcmRzKSA9PiB7XG4gICAgbGV0IHN0YXR1cyA9IGJvYXJkLmdldChjb29yZHMpO1xuICAgIGlmIChzdGF0dXMgPT0gXCJlbXB0eVwiKSB7XG4gICAgICBib2FyZC5zZXQoY29vcmRzLCBcIm1pc3NcIik7XG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHN0YXR1cykgJiYgc3RhdHVzWzBdID09IFwic2hpcFwiKSB7XG4gICAgICBib2FyZC5zZXQoY29vcmRzLCBbXCJoaXRcIiwgc3RhdHVzWzFdXSk7XG4gICAgICBzdGF0dXNbMV0uaGl0KCk7XG4gICAgfVxuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoc3RhdHVzKSAmJiBzdGF0dXNbMV0uaXNTdW5rKCkpIHtcbiAgICAgIGxldCBjb29yZHMgPSBzdGF0dXNbMV0uZ2V0Q29vcmRzKCk7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0YXR1c1sxXS5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zb2xlLmxvZyhgY29vcmRzIGkgaXMgJHtjb29yZHNbaV19YCk7XG4gICAgICAgIGJvYXJkLnNldChjb29yZHNbaV0sIFtcInN1bmtcIiwgc3RhdHVzWzFdXSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGFsbEVtcHR5ID0gKCkgPT4ge1xuICAgIGxldCBpc0VtcHR5ID0gdHJ1ZTtcbiAgICBsZXQgYXJyID0gQXJyYXkuZnJvbShib2FyZC52YWx1ZXMoKSk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChhcnJbaV0gIT0gXCJlbXB0eVwiKSB7XG4gICAgICAgIGlzRW1wdHkgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGlzRW1wdHk7XG4gIH07XG5cbiAgY29uc3QgYWxsU3VuayA9ICgpID0+IHtcbiAgICBsZXQgYXJyID0gQXJyYXkuZnJvbShib2FyZC52YWx1ZXMoKSk7XG4gICAgbGV0IHNoaXBzQXJyYXkgPSBhcnIuZmlsdGVyKCh2YWwpID0+IEFycmF5LmlzQXJyYXkodmFsKSk7XG4gICAgbGV0IHN1bmsgPSB0cnVlO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2hpcHNBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHNoaXBzQXJyYXlbaV1bMF0gPT0gXCJzaGlwXCIpIHtcbiAgICAgICAgc3VuayA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc3VuaztcbiAgfTtcblxuICAvL2NvbnNvbGUubG9nKGJvYXJkKTtcbiAgcmV0dXJuIHsgYm9hcmQsIHJlY2VpdmVBdHRhY2ssIGFsbFN1bmssIGFkZFNoaXBzLCBhbGxFbXB0eSwgZm9yVGVzdGluZyB9O1xufVxuXG5mdW5jdGlvbiBQbGF5ZXIocmVhbCkge1xuICBsZXQgZ2IgPSBHYW1lYm9hcmQoKTtcbiAgaWYgKHJlYWwgPT0gdHJ1ZSkge1xuICAgIC8vbGV0IHRoZW0gcGxhY2UgdGhlaXIgb3duIHNoaXBzXG4gICAgZ2IuYWRkU2hpcHMoKTtcbiAgfSBlbHNlIHtcbiAgICAvL2FkZCBzaGlwcyBhdCByYW5kb21cbiAgICBnYi5hZGRTaGlwcygpO1xuICAgIC8vZ2IuZm9yVGVzdGluZygpO1xuICB9XG4gIHJldHVybiB7IGdiIH07XG59XG5cbmV4cG9ydCB7IFNoaXAsIEdhbWVib2FyZCwgUGxheWVyIH07XG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcbm9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCIvL2ltcG9ydCB7IGRpc3BsYXlCb2FyZCB9IGZyb20gXCIuL2RvbS5qc1wiO1xuaW1wb3J0IHsgU2hpcCwgR2FtZWJvYXJkLCBQbGF5ZXIgfSBmcm9tIFwiLi9mYWN0b3JpZXMuanNcIjtcbmltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5cbmNvbnN0IG9wcEdyaWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmdyaWQub3BwXCIpO1xuY29uc3QgeW91R3JpZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZ3JpZC55b3VcIik7XG5jb25zdCBkaWFsb2cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiZGlhbG9nXCIpO1xuXG5sZXQgeW91ID0gUGxheWVyKGZhbHNlKTtcbmxldCBvcHAgPSBQbGF5ZXIodHJ1ZSk7XG5cbmxldCBzcXVhcmVTdGF0dXNZb3UgPSBBcnJheS5mcm9tKHlvdS5nYi5ib2FyZC52YWx1ZXMoKSk7XG5sZXQgc3F1YXJlU3RhdHVzT3BwID0gQXJyYXkuZnJvbShvcHAuZ2IuYm9hcmQudmFsdWVzKCkpO1xuXG5jb25zb2xlLmxvZyhBcnJheS5mcm9tKHlvdS5nYi5ib2FyZC5lbnRyaWVzKCkpKTtcbmNvbnNvbGUubG9nKEFycmF5LmZyb20ob3BwLmdiLmJvYXJkLmVudHJpZXMoKSkpO1xuXG5sZXQgY29vcmRzID0gQXJyYXkuZnJvbSh5b3UuZ2IuYm9hcmQua2V5cygpKTtcblxuZnVuY3Rpb24gY29tcHV0ZXJzVHVybigpIHtcbiAgbGV0IGF0dGFja2VkID0gZmFsc2U7XG4gIGRvIHtcbiAgICBsZXQgcGljayA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMCk7XG4gICAgY29uc29sZS5sb2coYHBpY2sgaXMgJHtwaWNrfWApO1xuICAgIGxldCBlbnRyeSA9IEFycmF5LmZyb20oeW91LmdiLmJvYXJkLmVudHJpZXMoKSlbcGlja107XG4gICAgY29uc29sZS5sb2coYGVudHJ5IGlzICR7ZW50cnl9YCk7XG4gICAgbGV0IGNvb3JkcyA9IGVudHJ5WzBdO1xuICAgIGxldCBzdGF0dXMgPSBlbnRyeVsxXTtcblxuICAgIC8vaWYgaXQncyBhbiBBcnJheSAmIGEgc2hpcCBPUiBpZiBpdCdzICdlbXB0eSdcblxuICAgIGlmICgoQXJyYXkuaXNBcnJheShzdGF0dXMpICYmIHN0YXR1c1swXSA9PSBcInNoaXBcIikgfHwgc3RhdHVzID09IFwiZW1wdHlcIikge1xuICAgICAgeW91LmdiLnJlY2VpdmVBdHRhY2soY29vcmRzKTtcbiAgICAgIGF0dGFja2VkID0gdHJ1ZTtcbiAgICB9XG4gIH0gd2hpbGUgKCFhdHRhY2tlZCk7XG59XG5cbmZ1bmN0aW9uIGRpc3BsYXlZb3VyQm9hcmQoYXJyKSB7XG4gIC8vICAgbGV0IGNvb3JkcyA9IEFycmF5LmZyb20ocGxheWVyLmdiLmJvYXJkLmtleXMoKSk7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDA7IGkrKykge1xuICAgIGNvbnN0IG5ld0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGFycltpXSkgJiYgYXJyW2ldID09IFwiZW1wdHlcIikge1xuICAgICAgbmV3RGl2LnNldEF0dHJpYnV0ZShcbiAgICAgICAgXCJzdHlsZVwiLFxuICAgICAgICBgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBkb3R0ZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiBibGFjaztcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyNXB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwcHg7YFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJyW2ldKSAmJiBhcnJbaV1bMF0gPT0gXCJzaGlwXCIpIHtcbiAgICAgIG5ld0Rpdi5zZXRBdHRyaWJ1dGUoXG4gICAgICAgIFwic3R5bGVcIixcbiAgICAgICAgYGJhY2tncm91bmQtY29sb3I6IG9yYW5nZTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogb3JhbmdlO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjVweDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwcHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMHB4O2BcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFycltpXSkgJiYgYXJyW2ldWzBdID09IFwiaGl0XCIpIHtcbiAgICAgIG5ld0Rpdi5zZXRBdHRyaWJ1dGUoXG4gICAgICAgIFwic3R5bGVcIixcbiAgICAgICAgYGJhY2tncm91bmQtY29sb3I6IHJlZDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogb3JhbmdlO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjVweDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwcHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMHB4O2BcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmICghQXJyYXkuaXNBcnJheShhcnJbaV0pICYmIGFycltpXSA9PSBcIm1pc3NcIikge1xuICAgICAgbmV3RGl2LnNldEF0dHJpYnV0ZShcbiAgICAgICAgXCJzdHlsZVwiLFxuICAgICAgICBgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbiAgICAgICAgICAgICAgICAgICAgICBib3JkZXItc3R5bGU6IGRvdHRlZDtcbiAgICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDFweDtcbiAgICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IGJsYWNrO1xuICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyNXB4O1xuICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMjVweDtcbiAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwcHg7XG4gICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwcHg7YFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJyW2ldKSAmJiBhcnJbaV1bMF0gPT0gXCJzdW5rXCIpIHtcbiAgICAgIG5ld0Rpdi5zZXRBdHRyaWJ1dGUoXG4gICAgICAgIFwic3R5bGVcIixcbiAgICAgICAgYGJhY2tncm91bmQtY29sb3I6ICNlYzgzMmM7XG4gICAgICAgIGJhY2tncm91bmQtaW1nOiB1cmwoJy4va2l0dHlzdmcuc3ZnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDFweDtcbiAgICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHJlZDtcbiAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjVweDtcbiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1cHg7XG4gICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMHB4O1xuICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMHB4O2BcbiAgICAgICk7XG4gICAgfVxuICAgIC8vICAgbmV3RGl2LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgLy8gICAgIHVwZGF0ZUJvYXJkKG5ld0RpdiwgcGxheWVyLCBpKTtcbiAgICAvLyAgICAgLy8gICBwbGF5ZXIuZ2IucmVjZWl2ZUF0dGFjayhjb29yZHNbaV0pO1xuICAgIC8vICAgfSk7XG5cbiAgICB5b3VHcmlkLmFwcGVuZENoaWxkKG5ld0Rpdik7XG4gIH1cbn1cblxuZnVuY3Rpb24gZGlzcGxheU9wcEJvYXJkKGFycikge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IDEwMDsgaSsrKSB7XG4gICAgY29uc3QgbmV3RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoYXJyW2ldKSAmJiBhcnJbaV0gPT0gXCJlbXB0eVwiKSB7XG4gICAgICBuZXdEaXYuc2V0QXR0cmlidXRlKFxuICAgICAgICBcInN0eWxlXCIsXG4gICAgICAgIGBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1zdHlsZTogZG90dGVkO1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IGJsYWNrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjVweDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMHB4O2BcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFycltpXSkgJiYgYXJyW2ldWzBdID09IFwic2hpcFwiKSB7XG4gICAgICBuZXdEaXYuc2V0QXR0cmlidXRlKFxuICAgICAgICBcInN0eWxlXCIsXG4gICAgICAgIGBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItc3R5bGU6IGRvdHRlZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDFweDtcbiAgICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IGJsYWNrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDI1cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDBweDtgXG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShhcnJbaV0pICYmIGFycltpXVswXSA9PSBcImhpdFwiKSB7XG4gICAgICBuZXdEaXYuc2V0QXR0cmlidXRlKFxuICAgICAgICBcInN0eWxlXCIsXG4gICAgICAgIGBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4vcGF3LnN2ZycpO1xuICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiBvcmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDI1cHg7XG4gICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDBweDtcbiAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDBweDtgXG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAoIUFycmF5LmlzQXJyYXkoYXJyW2ldKSAmJiBhcnJbaV0gPT0gXCJtaXNzXCIpIHtcbiAgICAgIG5ld0Rpdi5zZXRBdHRyaWJ1dGUoXG4gICAgICAgIFwic3R5bGVcIixcbiAgICAgICAgYGJhY2tncm91bmQtY29sb3I6IGdyYXk7XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItc3R5bGU6IGRvdHRlZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogMXB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiBibGFjaztcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyNXB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwcHg7YFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJyW2ldKSAmJiBhcnJbaV1bMF0gPT0gXCJzdW5rXCIpIHtcbiAgICAgIG5ld0Rpdi5zZXRBdHRyaWJ1dGUoXG4gICAgICAgIFwic3R5bGVcIixcbiAgICAgICAgYGJhY2tncm91bmQtY29sb3I6ICNlYzgzMmM7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi9raXR0eXN2Zy5zdmcnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDFweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogb3JhbmdlO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDI1cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDBweDtgXG4gICAgICApO1xuICAgIH1cblxuICAgIG5ld0Rpdi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgLy91cGRhdGVCb2FyZChuZXdEaXYsIHBsYXllciwgaSk7XG4gICAgICBvcHAuZ2IucmVjZWl2ZUF0dGFjayhjb29yZHNbaV0pO1xuICAgICAgY29uc29sZS5sb2cob3BwLmdiLmJvYXJkKTtcbiAgICAgIG9wcEdyaWQudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgICAgZGlzcGxheU9wcEJvYXJkKEFycmF5LmZyb20ob3BwLmdiLmJvYXJkLnZhbHVlcygpKSk7XG5cbiAgICAgIGNvbXB1dGVyc1R1cm4oKTtcbiAgICAgIG9wcEdyaWQudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgICAgZGlzcGxheU9wcEJvYXJkKEFycmF5LmZyb20ob3BwLmdiLmJvYXJkLnZhbHVlcygpKSk7XG4gICAgICBkaWFsb2cuc2hvd01vZGFsKCk7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgZGlhbG9nLmNsb3NlKCk7XG4gICAgICB9LCA3NTApO1xuICAgICAgeW91R3JpZC50ZXh0Q29udGVudCA9IFwiXCI7XG4gICAgICBkaXNwbGF5WW91ckJvYXJkKEFycmF5LmZyb20oeW91LmdiLmJvYXJkLnZhbHVlcygpKSk7XG4gICAgfSk7XG5cbiAgICBvcHBHcmlkLmFwcGVuZENoaWxkKG5ld0Rpdik7XG4gIH1cbn1cblxuZGlzcGxheVlvdXJCb2FyZChzcXVhcmVTdGF0dXNZb3UpO1xuZGlzcGxheU9wcEJvYXJkKHNxdWFyZVN0YXR1c09wcCk7XG5cbmV4cG9ydCB7IGRpc3BsYXlPcHBCb2FyZCwgZGlzcGxheVlvdXJCb2FyZCB9O1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIlNoaXAiLCJsZW4iLCJjb29yZHMiLCJ0aW1lc0hpdCIsImhpdCIsImlzU3VuayIsImdldEhpdHMiLCJhZGRDb29yZHMiLCJzdHIiLCJnZXRDb29yZHMiLCJQbGF5ZXIiLCJyZWFsIiwiZ2IiLCJib2FyZCIsIk1hcCIsImxldHRlcnMiLCJzcGxpdCIsInNldCIsInJlY2VpdmVBdHRhY2siLCJzdGF0dXMiLCJnZXQiLCJBcnJheSIsImlzQXJyYXkiLCJjb25zb2xlIiwibG9nIiwiYWxsU3VuayIsInNoaXBzQXJyYXkiLCJmcm9tIiwidmFsdWVzIiwiZmlsdGVyIiwidmFsIiwic3VuayIsImFkZFNoaXBzIiwibnVtIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibGV0dCIsImNoYXJBdCIsInNpemUiLCJkaXJlY3Rpb24iLCJyb3VuZCIsInNocCIsImNvb3JkIiwiaiIsImFsbEVtcHR5IiwiaXNFbXB0eSIsImFyciIsImZvclRlc3RpbmciLCJzaGlwMSIsInNoaXBvbyIsIkdhbWVib2FyZCIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsImxvY2FscyIsIm9wcEdyaWQiLCJ5b3VHcmlkIiwiZGlhbG9nIiwieW91Iiwib3BwIiwic3F1YXJlU3RhdHVzWW91Iiwic3F1YXJlU3RhdHVzT3BwIiwiZW50cmllcyIsImtleXMiLCJjb21wdXRlcnNUdXJuIiwiYXR0YWNrZWQiLCJwaWNrIiwiZW50cnkiLCJkaXNwbGF5WW91ckJvYXJkIiwibmV3RGl2IiwiZGlzcGxheU9wcEJvYXJkIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRleHRDb250ZW50Iiwic2hvd01vZGFsIiwic2V0VGltZW91dCIsImNsb3NlIl0sInNvdXJjZVJvb3QiOiIifQ==